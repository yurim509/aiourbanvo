plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'

}

group = 'com.allinone.proja3'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// https://mvnrepository.com/artifact/com.querydsl/querydsl-apt
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.3.4'

	// gson 라이브러리 설치
	implementation 'com.google.code.gson:gson:2.10.1'

	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '3.3.5'
	// https://mvnrepository.com/artifact/net.coobird/thumbnailator
	implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.1'



	//문자 api CYR
	implementation 'net.nurigo:sdk:4.2.7'

}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 소스 디렉토리 설정
def querydslDir = "$buildDir/generated/querydsl"

// sourceSets에 QueryDSL 소스 디렉토리를 포함시킴
sourceSets {
	main.java.srcDir querydslDir
}

tasks.register('compileQuerydsl', JavaCompile) {
	source = sourceSets.main.java
	classpath = configurations.compileClasspath
	destinationDirectory.set(file(querydslDir))
	options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.named('compileQuerydsl', JavaCompile) {
	source = sourceSets.main.java
	classpath = configurations.compileClasspath
	destinationDirectory.set(file(querydslDir))
	options.annotationProcessorPath = configurations.annotationProcessor
}

compileJava {
	dependsOn compileQuerydsl
	doFirst {
		// 이전에 생성된 Q타입 파일을 삭제하여 중복 문제 해결
		delete fileTree(dir: querydslDir, include: '**/Q*.java')
	}
}

